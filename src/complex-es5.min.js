"use strict"
function isCartesian(r){return"re"in r||"im"in r}function isPolar(r){return"r"in r&&"arg"in r}function re(r){return isCartesian(r)?re_cartesian(r):re_polar(r)}function re_cartesian(r){return r.re?r.re:0}function re_polar(r){return r.r*Math.cos(r.arg)}function im(r){return isCartesian(r)?im_cartesian(r):im_polar(r)}function im_cartesian(r){return r.im?r.im:0}function im_polar(r){return r.r*Math.sin(r.arg)}function csum(r,e){return isCartesian(r)?csum_cartesian(r,toCartesian(e)):csum_polar(r,toPolar(e))}function csum_cartesian(r,e){return _extends({},e,r,{re:re(r)+re(e),im:im(r)+im(e)})}function csum_polar(r,e){return _extends({},e,r,toPolar({re:re(r)+re(e),im:im(r)+im(e)}))}function csub(r,e){return isCartesian(r)?csub_cartesian(r,toCartesian(e)):csub_polar(r,toPolar(e))}function csub_cartesian(r,e){return _extends({},e,r,{re:re(r)-re(e),im:im(r)-im(e)})}function csub_polar(r,e){return _extends({},e,r,toPolar({re:re(r)-re(e),im:im(r)-im(e)}))}function cmul(r,e){return isCartesian(r)?cmul_cartesian(r,toCartesian(e)):cmul_polar(r,toPolar(e))}function cmul_cartesian(r,e){return _extends({},e,r,{re:re(r)*re(e)-im(r)*im(e),im:re(r)*im(e)+re(e)*im(r)})}function cmul_polar(r,e){return _extends({},e,r,{r:r.r*e.r,arg:normalize(r.arg+e.arg)})}function cdiv(r,e){return isCartesian(r)?cdiv_cartesian(r,toCartesian(e)):cdiv_polar(r,toPolar(e))}function cdiv_cartesian(r,e){var o=cmul(r,conjugate(e)),u=cmod2(e)
return _extends({},e,r,{re:o.re/u,im:o.im/u})}function cdiv_polar(r,e){return _extends({},e,r,{r:r.r/e.r,arg:normalize(r.arg-e.arg)})}function cmod(r){return isCartesian(r)?cmod_cartesian(r):cmod_polar(r)}function cmod_cartesian(r){return Math.sqrt(re(r)*re(r)+im(r)*im(r))}function cmod_polar(r){return r.r}function cmod2(r){return isCartesian(r)?cmod2_cartesian(r):cmod2_polar(r)}function cmod2_cartesian(r){return re(r)*re(r)+im(r)*im(r)}function cmod2_polar(r){return r.r*r.r}function carg(r){return isCartesian(r)?carg_cartesian(r):carg_polar(r)}function carg_cartesian(r){var e=re(r),o=im(r)
if(0===o)return e>0?0:Math.PI
if(0===e)return o>0?Math.PI/2:-Math.PI/2
var u=Math.atan2(e,o)
return e>=0&&o>=0?normalize(u):0>e&&o>0?normalize(u+Math.PI):0>=e&&0>=o?normalize(u):e>0&&0>o?normalize(u-Math.PI):void 0}function normalize(r){return r>Math.PI?normalize(r-2*Math.PI):r<=-Math.PI?normalize(r+2*Math.PI):r}function carg_polar(r){return r.arg}function toCartesian(r){return isCartesian(r)?r:toCartesian_polar(r)}function toCartesian_polar(r){return _extends({},r,{r:void 0,arg:void 0,re:re_polar(r),im:im_polar(r)})}function toPolar(r){return isCartesian(r)?toPolar_cartesian(r):r}function toPolar_cartesian(r){return _extends({},r,{re:void 0,im:void 0,r:cmod(r),arg:carg(r)})}function conjugate(r){return isCartesian(r)?conjugate_cartesian(r):conjugate_polar(r)}function conjugate_cartesian(r){return _extends({},r,{re:re(r),im:-im(r)})}function conjugate_polar(r){return _extends({},r,{r:r.r,arg:-r.arg})}function cequals(r,e){return isCartesian(r)?cequals_cartesian(r,toCartesian(e)):cequals_polar(r,toPolar(e))}function cequals_cartesian(r,e){return r.re===e.re&&r.im===e.im}function cequals_polar(r,e){return r.r===e.r&&r.arg===e.arg}Object.defineProperty(exports,"__esModule",{value:!0})
var _extends=Object.assign||function(r){for(var e=1;e<arguments.length;e++){var o=arguments[e]
for(var u in o)Object.prototype.hasOwnProperty.call(o,u)&&(r[u]=o[u])}return r}
exports.isCartesian=isCartesian,exports.isPolar=isPolar,exports.re=re,exports.re_cartesian=re_cartesian,exports.re_polar=re_polar,exports.im=im,exports.im_cartesian=im_cartesian,exports.im_polar=im_polar,exports.csum=csum,exports.csum_cartesian=csum_cartesian,exports.csum_polar=csum_polar,exports.csub=csub,exports.csub_cartesian=csub_cartesian,exports.csub_polar=csub_polar,exports.cmul=cmul,exports.cmul_cartesian=cmul_cartesian,exports.cmul_polar=cmul_polar,exports.cdiv=cdiv,exports.cdiv_cartesian=cdiv_cartesian,exports.cdiv_polar=cdiv_polar,exports.cmod=cmod,exports.cmod_cartesian=cmod_cartesian,exports.cmod_polar=cmod_polar,exports.cmod2=cmod2,exports.cmod2_cartesian=cmod2_cartesian,exports.cmod2_polar=cmod2_polar,exports.carg=carg,exports.carg_cartesian=carg_cartesian,exports.carg_polar=carg_polar,exports.toCartesian=toCartesian,exports.toCartesian_polar=toCartesian_polar,exports.toPolar=toPolar,exports.toPolar_cartesian=toPolar_cartesian,exports.conjugate=conjugate,exports.conjugate_cartesian=conjugate_cartesian,exports.conjugate_polar=conjugate_polar,exports.cequals=cequals,exports.cequals_cartesian=cequals_cartesian,exports.cequals_polar=cequals_polar
